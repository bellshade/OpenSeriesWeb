@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
    * {
        @apply transition-all duration-200;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        @apply text-zinc-800 dark:text-zinc-200;
    }

    p {
        @apply text-zinc-500 dark:text-zinc-400;
    }

    [data-line-numbers] {
        @apply [counter-reset:line];
    }

    [data-line-numbers] > [data-line]::before {
        @apply mr-4 inline-block w-4 text-right text-[zinc] [content:counter(line)] [counter-increment:line];
    }

    code[data-line-numbers-max-digits="2"] {
        @apply [&>[data-line]]:before:w-8;
    }

    code[data-line-numbers-max-digits="3"] > [data-line]::before {
        @apply [&>[data-line]]:before:w-12;
    }

    #landing-svg path {
        @apply [stroke-dasharray:var(--stroke-dasharray)] [stroke-dashoffset:var(--stroke-dashoffset)];
    }
}

@define-mixin syntax-highight $theme {
    html.$(theme) pre[data-theme*=" "] {
        background-color: var(--shiki-$(theme)-bg);
    }

    html.$(theme) code[data-theme*=" "],
    html.$(theme) code[data-theme*=" "] span {
        color: var(--shiki-$(theme));
        background-color: var(--shiki-$(theme)-bg);
    }
}

@define-mixin svg-anim $theme {
    @keyframes landing-svg-anim-$(theme) {
        0%,
        100% {
            @apply fill-transparent [stroke-dashoffset:var(--stroke-dashoffset)];
        }

        50% {
            @apply [stroke-dashoffset:0];

            @mixin-content;
        }
    }
}

@mixin svg-anim light {
    fill: theme("colors.zinc.800");
}

@mixin svg-anim dark {
    fill: theme("colors.white");
}

@mixin syntax-highight light;
@mixin syntax-highight dark;
